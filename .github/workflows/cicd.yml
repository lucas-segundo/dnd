name: CI/CD

env:
  DOCKER_IMAGE_TAG: dnd:${{ github.ref_name }}

on:
  push:
    branches: [main, staging]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: ${{ env.DOCKER_IMAGE_TAG }}
          outputs: type=docker,dest=/tmp/${{ env.DOCKER_IMAGE_TAG }}.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DOCKER_IMAGE_TAG }}
          path: /tmp/${{ env.DOCKER_IMAGE_TAG }}.tar

  ci:
    needs: build
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.DOCKER_IMAGE_TAG }}
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/${{ env.DOCKER_IMAGE_TAG }}.tar
          docker image ls -a

      - name: Up Containers
        run: docker-compose up -d
        env:
          POSTGRES_DATABASE_URL: ${{ vars.DOCKER_POSTGRES_DATABASE_URL }}
          DOCKER_COMPOSE_COMMAND: ${{ vars.DOCKER_COMPOSE_COMMAND }}
          DOCKER_COMPOSE_TARGET: ${{ vars.DOCKER_COMPOSE_TARGET }}

      - name: Run unit tests
        run: docker compose exec app pnpm test

      - name: Run database migrations
        run: docker compose exec app pnpm migrate:prod

      - name: Run e2e tests
        run: docker compose exec app pnpm test:e2e

      - name: Down Containers
        run: docker compose down

  cd:
    needs: ci
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.DOCKER_IMAGE_TAG }}
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/${{ env.DOCKER_IMAGE_TAG }}.tar
          docker image ls -a

      - name: Run database migrations
        run: docker run -e POSTGRES_DATABASE_URL=${{ secrets.POSTGRES_DATABASE_URL }} ${{ env.DOCKER_IMAGE_TAG }} pnpm migrate:prod

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Prod Docker image and push to DockerHub
        uses: docker/build-push-action@v5
        with:
          target: prod
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG }}

      - name: Trigger deploy hook on Render
        run: curl -X GET ${{ secrets.DEPLOY_HOOK_URL }}
